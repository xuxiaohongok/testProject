<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.2.xsd  
           http://www.springframework.org/schema/aop   
           http://www.springframework.org/schema/aop/spring-aop-3.2.xsd  
           http://www.springframework.org/schema/tx  
           http://www.springframework.org/schema/tx/spring-tx-3.2.xsd  
           http://www.springframework.org/schema/context  
           http://www.springframework.org/schema/context/spring-context-3.2.xsd"
       default-autowire="byName" default-lazy-init="false">

    <!-- 采用注释的方式配置bean -->
    <context:annotation-config/>

    <!-- 配置要扫描的包 -->
    <context:component-scan base-package="com.zhidian.ad.billing.service"/>

    <!-- 读入配置属性文件 -->
    <!-- <context:property-placeholder location="classpath:jdbc.properties" /> -->
    <context:property-placeholder location="classpath:application.properties"/>

    <!-- proxy-target-class默认"false",更改为"ture"使用CGLib动态代理 -->
    <aop:aspectj-autoproxy proxy-target-class="true"/>

    <!--redis 配置-->
    <bean
            id="jedisPoolConfig"
            class="redis.clients.jedis.JedisPoolConfig">
        <property
                name="maxIdle"
                value="${redis.pool.maxIdle}"/>
        <!-- <property
            name="maxTotal"
            value="${redis.pool.maxActive}" />
        <property
            name="maxWait"
            value="${redis.pool.maxWait}" />
        <property
            name="testOnBorrow"
            value="${redis.pool.testOnBorrow}" /> -->
    </bean>


    <!-- 连接池配置形式、端口为默认:6379 -->
    <bean id="jedisPool" class="redis.clients.jedis.JedisPool"
          lazy-init="true">
        <constructor-arg index="0">
            <ref bean="jedisPoolConfig"/>
        </constructor-arg>
        <constructor-arg index="1" value="${redis.ip}"/>
        <constructor-arg index="2" value="${redis.port}" type="int"/>
        <constructor-arg index="3" value="${redis.connectionTimeOut}" type="int"/>
        <!-- <constructor-arg index="4" value="${redis.clientPassWord}" /> -->
    </bean>

    <!--引入dubbo配置文件-->
    <import resource="dubbo-provider.xml"/>
</beans>